# -*- coding: utf-8 -*-
import os, io
import json
from pptx.util import Inches, Cm, Pt
from pptx.enum.dml import MSO_THEME_COLOR
from pptx.dml.color import RGBColor
from pptx.enum.shapes import MSO_SHAPE
from pptx import Presentation
from math import *
temp =[]

json_root_path = 'C:/Users/minje/PycharmProjects/pytorchproject/VisionAPI/Gvidatas/'
temp =os.listdir(json_root_path)
temp_len = len(temp)

with open('./Gvidatas/Gvidata3.json', 'r', encoding='utf-8') as f:
    contents = f.read()  # string
    data = json.loads(contents)

prs = Presentation()
blank_slide_layout = prs.slide_layouts[6]
slide = prs.slides.add_slide(blank_slide_layout)
shapes = slide.shapes

print(data["location"][1])
for i in range(1, temp_len):

    with open(json_root_path + f'Gvidata{i}.json', 'r', encoding='UTF8') as file:  # k번째 Gvidata.json을 json_data로읽어들인다
        contents = file.read()  # string
        data = json.loads(contents)

        x = int (data["location"][0])
        y = int (data["location"][1])
        w = int (data["location"][2])
        h = int (data["location"][3])

        left = round((24 * (x/3365)),4)
        top = round((12 * (1 - (y/2386))),4)
        width = round(1+(24 * ((w)/3365)),4)
        height = round(1+(12 * ((h)/2386)),4)
        print(left, top, width, height)

        if data["text"] != "" and data["figure"] =="":
            print(data["text"])
            tb = slide.shapes.add_textbox(Cm(left), Cm(top), Cm(width), Cm(height))
            tf = tb.text_frame
            tf.text = ''
            p = tf.add_paragraph()
            p.text = data["text"]
            p.font.size = Pt(15)
        else:
            if data["figure"] == "circle":
                print(data["figure"])
                shape = shapes.add_shape(MSO_SHAPE.OVAL, Cm(left), Cm(top), Cm(width), Cm(height))
                shape.fill.background()
                line = shape.line
                line.color.rgb = RGBColor(0, 0, 0)
            if data["figure"] == "rectangle":
                print(data["figure"])
                shape = shapes.add_shape(MSO_SHAPE.OVAL, Cm(left), Cm(top), Cm(width), Cm(height))
                shape.fill.background()
                line = shape.line
                line.color.rgb = RGBColor(0, 0, 0)
            if data["figure"] == "triangle":
                print(data["figure"])
                shape = shapes.add_shape(MSO_SHAPE.OVAL, Cm(left), Cm(top), Cm(width), Cm(height))
                shape.fill.background()
                line = shape.line
                line.color.rgb = RGBColor(0, 0, 0)

prs.save('demo.pptx')
